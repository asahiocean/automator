<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>509</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Запустить AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>set title to "untitled"set extension to ".txt"set newfile to title &amp; extension -- "file" is reserved by the system, so "newfile"set isDesktop to falsetry	tell application "Finder"		set isFolder to (folder of the front Finder window) as alias	end tellon error	-- if no windows are open "Finder"	set isFolder to path to desktop folder as alias	set isDesktop to trueend try-- block of code with settings for the dialog box for specifying the file name-- to open the directory with icons, go to the terminal and enter-- open /System/Library/CoreServices/CoreTypes.bundle/Contents/Resourcesset displayText to "Enter file name and extension:"set newfile to text returned of (display dialog displayText ¬	with icon file ¬	":System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:GenericApplicationIcon.icns" default answer newfile)tell application "System Events"	set fileList to get the name of every disk item of isFolderend tell-- if such a file already exists, then the number will be added to the name of the new file-- search for an unoccupied number will be found by iterating over all files with the same nameset x to 1repeat	if newfile is in fileList then		set newfile to title &amp; " " &amp; x &amp; extension		set x to x + 1	else		exit repeat	end ifend repeattell application "Finder"	activate	set thefile to make new file at folder isFolder with properties {name:newfile}	if isDesktop is false then		reveal thefile	else		select window of desktop		set selection to thefile	end ifend telltell application "System Events"	tell process "Finder"		open thefile -- to open the file in the default editor		-- keystroke return -- to rename the new file	end tellend tell</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>CF8EAF37-4046-4C69-A45B-0A4A805263EE</string>
				<key>Keywords</key>
				<array>
					<string>Запустить</string>
				</array>
				<key>OutputUUID</key>
				<string>8B9E54D3-4AA9-4624-8118-3CC114B97CDC</string>
				<key>UUID</key>
				<string>50F820A0-79AD-4C26-8E98-474BE871264C</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>376.500000:658.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>backgroundColorName</key>
		<string>blackColor</string>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarAdd</string>
		<key>useAutomaticInputType</key>
		<integer>1</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
